<?xml version="1.0"?>
<robot name = "robot_chassis" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="$(find my_ros_robot_description)/urdf/properties.xacro"/>

    <xacro:macro name="chassis" params="">

        <link name="base_footprint"/>


        <joint name="base_footprint_to_base_link" type="fixed">
            <parent link="base_footprint"/>
            <child link="base_link"/>
            <origin rpy="0 0 0" xyz="0 0 0.1"/>
        </joint>

        <joint name="base_link_to_caster" type="fixed">
            <parent link="base_link"/>
            <child link="caster"/>
            <origin rpy="0 0 0" xyz="-0.3 0 -0.05"/>
        </joint>

        <joint name="base_link_to_caster2" type="fixed">
            <parent link="base_link"/>
            <child link="caster2"/>
            <origin rpy="0 0 0" xyz="-0.3 0 -0.05"/>
        </joint>

        <joint name="base_link_to_camera_link" type="fixed">
            <parent link="base_link"/>
            <child link="camera_link"/>
            <origin rpy="0 0 0" xyz="0.21 0 0.05"/>
        </joint>

        <joint name="base_link_to_hokuyo_link" type="fixed">    
            <parent link="base_link"/>
            <child link="hokuyo_link"/>
            <origin rpy="0 0 0" xyz="-0.2 0 0.15"/>
        </joint>

<!--  -->


        <link name="base_link">
            <inertial>
                <origin rpy="0 0 0" xyz="${CHASSIS_COM}"/>
                <mass value="${CHASSIS_M}"/>
                <inertia ixx="${CHASSIS_Ixx}" ixy="${CHASSIS_Ixy}" ixz="${CHASSIS_Ixz}" iyy="${CHASSIS_Iyy}" iyz="${CHASSIS_Iyz}" izz="${CHASSIS_Izz}"/>
            </inertial>
            <visual>
                <origin rpy="0 0 0" xyz="-0.1 0 0.05" />
                <geometry>
                    <box size="0.6 ${WHEEL_SEPARATION-0.02} 0.15"/>
                </geometry>
            </visual>
            <collision>
                <origin rpy="0 0 0" xyz="-0.1 0 0.05" />
                <geometry>
                    <box size="0.6 ${WHEEL_SEPARATION-0.02} 0.15"/>
                </geometry>
            </collision>
        </link>
        
        <link name="caster">
            <visual>
                <origin rpy="0 0 0" xyz="0 0.15 0" />
                <geometry>
                    <sphere radius= "0.05"/>
                </geometry>
            </visual>
            <collision>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <sphere radius= "0.05"/>
                </geometry>
            </collision>
        </link>
        
        <link name="caster2">
            <visual>
                <origin rpy="0 0 0" xyz="0 -0.15 0" />
                <geometry>
                    <sphere radius= "0.05"/>
                </geometry>
            </visual>
            <collision>
                <origin rpy="0 0 0" xyz="0 -0.15 0" />
                <geometry>
                    <sphere radius= "0.05"/>
                </geometry>
            </collision>
        </link>
        
        <link name="camera_link">
            <inertial>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <mass value="0.1"/>
                <inertia ixx="0.001" ixy="0.001" ixz="0.001" iyy="0.001" iyz="0.001" izz="0.001"/>
            </inertial>
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <box size="0.05 0.1 0.05"/>
                </geometry>
            </visual>
            <collision>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <box size="0.05 0.1 0.05"/>
                </geometry>
            </collision>
        </link>
        
        <link name="hokuyo_link">
            <inertial>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <mass value="0.2"/>
                <inertia ixx="0.001" ixy="0.001" ixz="0.001" iyy="0.001" iyz="0.001" izz="0.001"/>
            </inertial>
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0" />
                <geometry>
                    <cylinder length="0.1"  radius = "0.1"/>
                </geometry>
            </visual>
        </link>


        <gazebo reference="caster">
            <mu1>0</mu1>    
            <mu2>0</mu2>
            <material>Gazebo/Black</material>
        </gazebo>
        <gazebo reference="caster2">
            <mu1>0</mu1>    
            <mu2>0</mu2>
            <material>Gazebo/Black</material>
        </gazebo>
        <gazebo reference="base_link">
            <mu1>0.3</mu1>    
            <mu2>0.3</mu2>
            <material>Gazebo/Green</material>
        </gazebo>
        <gazebo reference="camera_link">
            <material>Gazebo/Yellow</material>
            <turnGravityOff>true</turnGravityOff>
            <sensor type="camera" name="camera1">
                <update_rate>30.0</update_rate>
                <camera name="head">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                    </image>
                    <clip>
                    <near>0.02</near>
                    <far>300</far>
                    </clip>
                    <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>rrbot/camera1</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>camera_link</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </gazebo>
        <gazebo reference="hokuyo_link">
            <material>Gazebo/Red</material>
            <turnGravityOff>true</turnGravityOff>
            <sensor type="ray" name="head_hokuyo_sensor">
                <pose> 0 0 0 0 0 0</pose>
                <visualize>true </visualize>
                <update_rate>40</update_rate>
                <ray>
                    <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.570796</min_angle>
                        <max_angle>1.570796</max_angle>
                    </horizontal>
                    </scan>
                    <range>
                    <min>0.10</min>
                    <max>10.0</max>
                    <resolution>0.001</resolution>
                    </range>
                </ray>
                <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                    <topicName>/scan</topicName>
                    <frameName>hokuyo_link</frameName>
                </plugin>
            </sensor>
        </gazebo>      
    </xacro:macro>

</robot>